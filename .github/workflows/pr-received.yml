# This action does the following things:
# - kicks off the parser
# - writes the data to the master spreadsheet
# - sends the contact email address an email letting them know that the ENF got their application
#
# Ted Cahall 13Nov2022
#
# https://stackoverflow.com/questions/69499645/how-to-securely-allow-github-actions-to-check-pr-and-post-results-in-comment
# https://securitylab.github.com/research/github-actions-preventing-pwn-requests/
#

name: Grant PR Received

# Controls when the workflow will run
on:
  pull_request_target:
    types: [opened, edited, synchronize]
    # types: [opened]

jobs:
  get_filename:
    runs-on: ubuntu-latest
    outputs:
      filename: ${{ steps.files.outputs.added }}
    steps:
      - name: Get application file name
        id: 'files'
        uses: Ana06/get-changed-files@v2.0.0
        with:
          filter: 'applications/*.md'

  call-parser:
    uses: ./.github/workflows/ru-big-parser.yml
    with:
      filename: "${{ needs.get_filename.outputs.filename }}"
    needs: get_filename

  echo-the-returned-fields:
    runs-on: ubuntu-latest
    needs: [get_filename, call-parser]
    steps:
      - id: echo-output
        run: |
          echo "filename is ${{ needs.get_filename.outputs.filename }} "
          echo "project name ${{ needs.call-parser.outputs.project_name }} "
          echo "contact name ${{ needs.call-parser.outputs.contact_name }}"
          echo "team name ${{ needs.call-parser.outputs.team_name }}"
          echo "app_email ${{ needs.call-parser.outputs.app_email }}"
          echo "total cost ${{ needs.call-parser.outputs.total_cost }}"
          echo "legal entity ${{ needs.call-parser.outputs.legal_entity }}"
          echo "legal addr ${{ needs.call-parser.outputs.legal_addr }}"
          echo "level ${{ needs.call-parser.outputs.level }}"
          echo "eos_addr ${{ needs.call-parser.outputs.eos_addr }}"
          echo "github_actor ${{ needs.call-parser.outputs.github_actor }}"
          echo "pr_no ${{ needs.call-parser.outputs.pr_no }}"
          echo "website ${{ needs.call-parser.outputs.website }}"
          echo "open_source ${{ needs.call-parser.outputs.open_source }}"
          echo "token_sale ${{ needs.call-parser.outputs.token_sale }}"

  write-spreadsheet:
    uses: ./.github/workflows/ru-big-gsheet.yml
    needs: call-parser
    with:
      project_name: ${{ needs.call-parser.outputs.project_name }}
      contact_name: ${{ needs.call-parser.outputs.contact_name }}
      team_name: ${{ needs.call-parser.outputs.team_name }}
      app_email: ${{ needs.call-parser.outputs.app_email }}
      total_cost: ${{ needs.call-parser.outputs.total_cost }}
      legal_entity: ${{ needs.call-parser.outputs.legal_entity }}
      legal_addr: ${{ needs.call-parser.outputs.legal_addr }}
      level: ${{ needs.call-parser.outputs.level }}
      eos_addr: ${{ needs.call-parser.outputs.eos_addr }}
      filename: ${{ needs.get_filename.outputs.filename }}
      github_actor: ${{ needs.call-parser.outputs.github_actor }}
      pr_no: ${{ needs.call-parser.outputs.pr_no }}
      website: ${{ needs.call-parser.outputs.website }}
      open_source: ${{ needs.call-parser.outputs.open_source }}
      token_sale: ${{ needs.call-parser.outputs.token_sale }}
    secrets:
      gsheet_private_key: ${{ secrets.GHSEET_API_KEY }}

  send-the-email:
    uses: ./.github/workflows/ru-pr-received-email.yml
    needs: call-parser
    with:
      project_name: ${{ needs.call-parser.outputs.project_name }}
      contact_name: ${{ needs.call-parser.outputs.contact_name }}
      team_name: ${{ needs.call-parser.outputs.team_name }}
      app_email: ${{ needs.call-parser.outputs.app_email }}
      # app_email: ted.cahall@eosnetwork.com  ## for testing
      total_cost: ${{ needs.call-parser.outputs.total_cost }}
      legal_entity: ${{ needs.call-parser.outputs.legal_entity }}
      legal_addr: ${{ needs.call-parser.outputs.legal_addr }}
      level: ${{ needs.call-parser.outputs.level }}
      eos_addr: ${{ needs.call-parser.outputs.eos_addr }}
      filename: ${{ needs.get_filename.outputs.filename }}
      github_actor: ${{ needs.call-parser.outputs.github_actor }}
      pr_no: ${{ needs.call-parser.outputs.pr_no }}
      website: ${{ needs.call-parser.outputs.website }}
      open_source: ${{ needs.call-parser.outputs.open_source }}
      token_sale: ${{ needs.call-parser.outputs.token_sale }}
    secrets:
      gmail_password: ${{ secrets.ENFMAILBOT_PASSWORD }}
